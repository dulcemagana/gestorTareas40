{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;;;;;;;;;;;;;;;ACf2B;AAClC;AACO;AACP;AACA;AACA;AACA,kBAAkB,+CAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,oCAAoC,oDAAoD;AACxF;AACA;AACA;AACA,KAAK;AACL;;;;;;UCxBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;ACNkC;AACD;AACjC;AACA;AACA;AACA,IAAI,+CAAU;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,8CAAO;AACnB;AACA;AACA,YAAY,+CAAU;AACtB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC,E","sources":["webpack://gestortareas/./src/task.js","webpack://gestortareas/./src/ui.js","webpack://gestortareas/webpack/bootstrap","webpack://gestortareas/webpack/runtime/define property getters","webpack://gestortareas/webpack/runtime/hasOwnProperty shorthand","webpack://gestortareas/webpack/runtime/make namespace object","webpack://gestortareas/./src/index.js"],"sourcesContent":["// Lista de tareas\r\nlet tasks = JSON.parse(localStorage.getItem('tasks')) || [];\r\n\r\n// Función para agregar tareas\r\nexport const addTask = (task) => {\r\n    const newTask = {\r\n        id: Date.now(),\r\n        text: task,\r\n        completed: false,\r\n    };\r\n    tasks.push(newTask);\r\n    localStorage.setItem( 'tasks', JSON.stringify(tasks));\r\n};\r\n\r\n// Función para poder traer la lista de tareas\r\nexport const getTasks = () => tasks;","import { getTasks } from \"./task\";\r\n\r\nexport const renderTask = () => {\r\n    const taskList = document.getElementById(\"task-list\");\r\n    taskList.innerHTML = \"\";\r\n\r\n    const tasks = getTasks();\r\n    tasks.forEach((task) => {\r\n        const li = document.createElement(\"li\");\r\n        li.setAttribute(\"data-id\", task.id);\r\n\r\n        // Añadir clase solo si la tarea esta completada\r\n        if(task.completed === true) {\r\n            li.classList.add(\"completed\");\r\n        }\r\n\r\n        li.innerHTML = `\r\n            ${task.text}\r\n            <button class=\"delete\"> Eliminar </button>\r\n            <button class=\"togle\">${task.completed === false ? \"completar\" : \"deshacer\"}</button>\r\n        `;\r\n\r\n        taskList.appendChild(li);\r\n    });\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { renderTask } from \"./ui\";\r\nimport { addTask } from \"./task\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    // Hacemos visible la lista de tareas\r\n    renderTask();\r\n\r\n    // Agregar el evento la funcion para agregar tareas\r\n    document.getElementById(\"task-form\").addEventListener(\"submit\", (e) => {\r\n        e.preventDefault();\r\n        const taskInput = document.getElementById(\"task-input\");\r\n        if(taskInput.value !== \"\") {\r\n            // Agregamos la tarea\r\n            addTask(taskInput.value);\r\n\r\n            // Volvemos a Cargar la lista de tareas\r\n            renderTask();\r\n\r\n            // limpiar el input\r\n            document.getElementById(\"task-imput\").value = \"\";\r\n        }\r\n    });\r\n\r\n});"],"names":[],"sourceRoot":""}